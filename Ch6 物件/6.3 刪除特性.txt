6.3 Deleting Properties

Delete does not operate on the value of the property but on the property itself.

delete 並非作用在值之上，而是作用在特性本身。

The delete operator only deletes own properties, not inherited ones. (To delete an inherited property, you must delete it from the prototype object in which it is defined. Doing this affects every object that inherits from that prototype.)

delete operator 只會刪除自身的 property，不會刪除繼承的 property。
如果要 delete inherited property，則必須 delete 定義這個 property 的 object，而這麼做會影響到每個繼承到該物件的物件。

不管刪除動作是成功或無效（像是刪除一個沒定義的 property），他的估算直都會是 true。

var o = { x: 1};
console.log(delete o.x);        // 刪除 x 回傳 true
console.log(delete o.x);        // Do nothing (x doesn't exist), and return true
console.log(delete o.toString); // Do nothing (toString isn't an own property), return true
console.log(delete 1);          // Nonsense, but evaluates to true

configurable 為 false 的特性無法山除，
nonextensible object 的 configurable property 可以 delete.

delete Object.prototype; var x = 1;   // Can't delete; property is non-configurable // Declare a global variable
delete this.x;                        // Can't delete this property
function f() {}                       // Declare a global function
delete this.f;                        // Can't delete this property either



