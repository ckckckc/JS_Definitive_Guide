8.8.4 Memoization

將傳入 function 不同參數的輸出結果暫存起來 (cached) 的類似技巧稱為 memoization。

function memoize(func) {
  var cache  = {};

  return function() {
    var key = arguments.length + Array.prototype.join.call(arguments, ',');

    if (key in cache) {
      return cache[key];
    }
    else{
      return cache[key] = func.apply(this, arguments);
    }
  };
}

示範 memoization 結合 higher-order function 的技巧：

// 找最大公因數的 GCD function (Greatest Common Divisor)
function gcd(a,b) {
  var t;
  if (a < b) t=b, b=a, a=t;
  while(b != 0) t=b, b = a%b, a=t;
  return a;
}

var gcdmemo = memoize(gcd);
gcdmemo(85, 187) // => 17

// 使用 memoize 為暴力解階乘時加入 cache 機制
var factorial = memoize(function(n) {
  return (n <= 1) ? 1 : n * factorial(n-1);
});

factorial(5);