8.8.3 Partial Application of Functions

這節的重點在於使用 bind() 參數能須先綁定的技巧，產生不同傳入順序的 function，不同順序能做出更多種 function programming 技巧。

// A utility function to convert an array-like object (or suffix of it)
// to a true array. Used below to convert arguments objects to real arrays.
function array(a, n) {
  return Array.prototype.slice.call(a, n || 0);
}

function partialLeft(f) {
  var args = arguments;
  return function() {
    var arr = array(args, 1);
    arr = arr.concat(array(arguments));
    return f.apply(this, arr);
  };
}

function partialRight(f) {
  var args = arguments;
  return function() {
    var arr = array(arguments);
    arr = arr.concat(array(args, 1));
    return f.apply(this, arr);
  };
}

function partial(f) {
  var args = arguments;
  return function() {
    var arr = array(args, 1);
    var i = 0, j = 0;

    for(; i < arr.length ; i++) {
      if (arr[i] === undefined) {
        arr[i] = arguments[j++];
      }
    }

    arr = arr.concat(array(arguments, j));
    return f.apply(this, arr);

  };
}


var increment = partialLeft(sum, 1);
increment(5) // 6
var cuberoot = partialRight(Math.pow, 1/3);
console.log(cuberoot(27)) // 3
String.prototype.first = partial(String.prototype.charAt, 0);
String.prototype.last = partial(String.prototype.substr, -1, 1);

var str = 'abc';
console.log(str.first()); // a
String.prototype.last = partial(String.prototype.substr, -1, 1);
console.log(str.last());  // c

not even odd 重新包裝：
var not = partialLeft(compose /* 上節的 compose */, function(x) { return !x; });
var even = function(x) { return x % 2 === 0; };
var odd = not(even);
var isNumber = not(isNaN);

後面的例子用了更多 partialLeft  partial 來包裝 計算 平均值 及 標準差 的計算方式
讓它更像 Lisp 程式碼。