5.6.5 throw

An exception is a signal that indicates that some sort of exceptional condition or error has occurred. 
To throw an exception is to signal such an error or exceptional condition. 
To catch an exception is to handle it—to take whatever actions are necessary or appropriate to recover from the exception.

throw 語法：

  throw expression;

expression 的估算值可以是任何型別，
可以丟出代表錯誤的數字代碼，
或是人類可讀的錯誤訊息文字。

The Error class and its subclasses are used when the JavaScript interpreter itself throws an error, and you can use them as well. An Error object has a name property that specifies the type of error and a message property that holds the string passed to the constructor function 

ex:

  function fraction(x) {
    if (x < 0) throw new Error("x must not be negative");

    for (var f = 1 ; x > 1 ; f *= x, x--) ;

    return f;
  }

When an exception is thrown, the JavaScript interpreter immediately stops normal program execution and jumps to the nearest exception handler. 

If the block of code in which the exception was thrown does not have an associated catch clause, the interpreter checks the next highest enclosing block of code to see if it has an exception handler associated with it. 
This continues until a handler is found. 
If an exception is thrown in a function that does not contain a try/ catch/finally statement to handle it, the exception propagates up to the code that invoked the function. 
In this way, exceptions propagate up through the lexical structure of JavaScript methods and up the call stack. If no exception handler is ever found, the exception is treated as an error and is reported to the user.