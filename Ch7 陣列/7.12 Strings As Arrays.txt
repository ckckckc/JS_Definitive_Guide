7.12 Strings As Arrays

在 ECMAScript 5 中，操作字串就像操作 read-only 陣列。

讀取個別字元可以使用 charAt() 方法，
也能用中括號 []，這個方式有可能更有效率。

對字串使用 typeof operator 會回傳 string。

使用 Array.isArray() 會回傳 false。

可以用部分陣列方法操作字。

但因為是 read-only 陣列，所以使用的方法若會改變 string 的話，
會噴錯。

var str = 'abcde';
str[0] = 'g';                         // 會無聲無息的失敗

console.log(str.charAt(0))            // a
console.log(str[0])                   // a
console.log(str[0] === str.charAt(0)) // true
console.log(typeof str)               // string
console.log(Array.isArray(str))       // false

console.log(Array.prototype.filter.call(str, (c) =>
  c.match(/[^aeiou]/)
).join(''));                          // bcd

console.log(Array.prototype.reverse.call(str, 'fg'));
// => Uncaught TypeError: Cannot assign to read only property '0' of object '[object String]'

補充，關於使用 [] 還是 charAt() 操作字串的看法：
https://stackoverflow.com/questions/5943726/string-charatx-or-stringx
